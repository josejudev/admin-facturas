// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model role {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(50)
  users user[]
}

model user {
  id         Int    @id @default(autoincrement())
  user_name  String @db.VarChar(50)
  user_email String @db.VarChar(100)
  user_pass  String @db.VarChar(230)
  role_id    Int
  role       role   @relation(fields: [role_id], references: [id])
}

model client {
  id             Int     @id @default(autoincrement())
  name           String  @db.VarChar(100)
  status         String? @default("Activo") @db.VarChar(50)
  rfc            String  @db.Char(25)
  fiscal_address String  @db.VarChar(100)
  email          String  @db.VarChar(100)
  address        String  @db.VarChar(100)
  contact_phone  String? @db.VarChar(30)
  contact_email  String? @db.VarChar(100)
  contact_name   String? @db.VarChar(100)
  offers         offer[]
}

//A offer can have a client
model offer {
  id               Int      @id @default(autoincrement())
  project_name     String?
  fileName         String?
  final_client     String?
  activity_resumen String?
  date             DateTime @default(now())
  status           String?  @default("Pendiente") @db.VarChar(50)
  client_id        Int
  client           client   @relation(fields: [client_id], references: [id])
  orders           order[]
}

model order {
  id            Int         @id @default(autoincrement())
  date          String      @db.VarChar(30)
  name          String      @db.VarChar(100)
  amount        Float
  currency      String      @db.VarChar(10)
  final_amount  Float
  order_balance Float

  offer_id      Int
  concept       String      @db.VarChar(100)
  class_type    String      @db.VarChar(50)
  type          String      @db.VarChar(50)
  status        String?     @default("En proceso") @db.VarChar(50)
  
  entity        String      @db.VarChar(20)
  observations  String?     @db.VarChar(100)
  fileName      String      @db.VarChar(100)
  offer         offer       @relation(fields: [offer_id], references: [id], onDelete: Cascade)
  milestone     milestone[]
}

model milestone {
  id                   Int    @id @default(autoincrement())
  order_id             Int
  concept_milestone    String @db.VarChar(100)
  num_milestone        Int
  percentage_milestone Float
  value_milestone      Float
  order                order  @relation(fields: [order_id], references: [id], onDelete: Cascade)

  //@@unique([order_id, num_hito])
}
